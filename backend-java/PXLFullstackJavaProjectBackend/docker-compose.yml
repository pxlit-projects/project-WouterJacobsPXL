version: '3.8'
services:
  config-service:
    image: config-service:latest
    container_name: config-service
    build:
      context: ./Config-Service
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    environment:
      - SPRING_PROFILES_ACTIVE=native
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://config-service:8088/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  discovery-service:
    image: discovery-service:latest
    container_name: discovery-service
    build:
      context: ./Discovery-Service
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    depends_on:
      config-service:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://discovery-service:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  api-gateway:
    image: api-gateway:latest
    container_name: api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    depends_on:
      config-service:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://api-gateway:8085/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  post-service:
    image: post-service:latest
    container_name: post-service
    build:
      context: ./Post-Service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      config-service:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://post-service:8081/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  comment-service:
    image: comment-service:latest
    container_name: comment-service
    build:
      context: ./Comment-Service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      config-service:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://comment-service:8083/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  review-service:
    image: review-service:latest
    container_name: review-service
    build:
      context: ./Review-Service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      config-service:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://review-service:8082/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  email-service:
    image: email-service:latest
    container_name: email-service
    build:
      context: ./email-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      config-service:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://email-service:8084/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  mariadb-post-service:
    image: mariadb:latest
    container_name: mariadb-post-service
    ports:
      - "3306:3306"
    volumes:
      - mariadb-post-service-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: PostServiceDB
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    networks:
      - microservice-network

  mariadb-comment-service:
    image: mariadb:latest
    container_name: mariadb-comment-service
    ports:
      - "3307:3306"
    volumes:
      - mariadb-comment-service-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: CommentServiceDB
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    networks:
      - microservice-network

  mariadb-review-service:
    image: mariadb:latest
    container_name: mariadb-review-service
    ports:
      - "3308:3306"
    volumes:
      - mariadb-review-service-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ReviewServiceDB
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    networks:
      - microservice-network

  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    ports:
      - "5672:5672"     # AMQP protocol port
      - "15672:15672"   # Management UI port
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  mariadb-post-service-data:
  mariadb-comment-service-data:
  mariadb-review-service-data:
  rabbitmq-data:

networks:
  microservice-network:
    driver: bridge